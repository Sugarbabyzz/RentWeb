<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">


    <!--配置Spring-->
    <!--自动扫描该包，使Spring认为该包下用了@Service注解的类是业务类
            这样就无需再在配置文件中配置service的bean了-->
    <context:component-scan base-package="com.sugar.rent.service"/>

    <!--配置整合mybatis-->
    <!--配置数据库相关参数-->
    <context:property-placeholder location="classpath:jdbc.properties"/>


    <!--数据库连接池-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!--连接池的基本属性-->
        <property name="driverClass" value="${jdbc.driverClass}"/>
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"/>
        <property name="user" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>

        <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
        <property name="acquireIncrement" value="5"/>
        <!--私有属性-->
        <property name="maxPoolSize" value="30"/>
        <property name="minPoolSize" value="10"/>
        <property name="autoCommitOnClose" value="false"/>
        <property name="checkoutTimeout" value="5000"/>
        <property name="acquireRetryAttempts" value="2"/>
        <property name="initialPoolSize" value="20"/>
    </bean>

    <!--配置SqlSessionFactory对象-->
    <!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
        <!--&lt;!&ndash;注入数据库连接池&ndash;&gt;-->
        <!--<property name="dataSource" ref="dataSource"/>-->
        <!--&lt;!&ndash;Mybatis全局配置文件&ndash;&gt;-->
        <!--<property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>-->
        <!--&lt;!&ndash;扫描entity包，使用别名&ndash;&gt;-->
        <!--<property name="typeAliasesPackage" value="com.sugar.rent.entity"/>-->
        <!--&lt;!&ndash;扫描mapper需要的xml文件,这样mapper映射文件就无需一个一个注册进配置文件里了&ndash;&gt;-->
        <!--<property name="mapperLocations" value="classpath:mapper/*.xml"/>-->
    <!--</bean>-->

    <!--动态实现DAO接口-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--注入sqlSessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--给出需要扫描DAO接口的包-->
        <property name="basePackage" value="com.sugar.rent.dao"/>
    </bean>

    <!--spring事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 开启事务控制的注解支持 -->
    <tx:annotation-driven/>
</beans>